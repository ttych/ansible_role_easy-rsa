---

- name: check if cert exists
  stat:
    path: "{{ easy_rsa_requests_pki }}/certs/{{ cn }}.crt"
  register: t_easy_rsa_generate_certificate_crt

- block:
    - name: create request
      command: "easyrsa --batch --subject-alt-name=DNS:{{ cn }},DNS:{{ cn.split('.')[0] }} --req-cn={{ cn }} gen-req {{ cn }} nopass"
      args:
        chdir: "{{ easy_rsa_requests_dir }}"
      become: yes
      become_user: "{{ easy_rsa_user }}"

    - name: import request
      command: "easyrsa --batch import-req {{ easy_rsa_requests_pki }}/reqs/{{ cn }}.req {{ cn }}"
      args:
        chdir: "{{ easy_rsa_ca_dir }}"
      become: yes
      become_user: "{{ easy_rsa_user }}"

    - name: sign request
      command: easyrsa --batch --passin=file:passphrase --passout=file:passphrase sign-req {{ type }} {{ cn }}
      args:
        chdir: "{{ easy_rsa_ca_dir }}"
      become: yes
      become_user: "{{ easy_rsa_user }}"

    - name: copy cert
      copy:
        src: "{{ easy_rsa_ca_pki }}/issued/{{ cn }}.crt"
        dest: "{{ easy_rsa_requests_pki }}/certs/{{ cn }}.crt"
        remote_src: yes
        owner: "{{ easy_rsa_user }}"
        group: "{{ easy_rsa_group }}"
        mode: "0600"

  when: not t_easy_rsa_generate_certificate_crt.stat.exists
